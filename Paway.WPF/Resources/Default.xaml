<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Paway.WPF;component\Resources\Default\Converter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Paway.WPF;component\Resources\Default\Path.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Paway.WPF;component\Resources\Default\Theme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region 默认全局样式 -->
    <!--ToolTip没有数据时，自动不显示-->
    <Style TargetType="ToolTip">
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--优化Image图片缩小时锯齿问题-->
    <Style TargetType="{x:Type Image}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--影响全局TextBlock样式，如ContentPresenter内容等-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

    <!--#region 可配置的样式参数 -->
    <!--Scroll滚动条初始透明度-->
    <sys:Double x:Key="ScrollOpacity">0</sys:Double>
    <!--Menu.Icon图标宽度-->
    <sys:Double x:Key="MenuIconWidth">18</sys:Double>
    <!--取消右键动画，防止连续右键菜单闪烁-->
    <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>
    <!--#endregion-->

    <!--#region 资源 -->
    <!--多语言-->
    <local:PConfig x:Key="LB"  />
    <!--文本图标-->
    <FontFamily x:Key="FontAwesome">/Paway.WPF;component/Resource/#fontawesome</FontFamily>
    <!--#endregion-->

    <!--#region 通用模板 -->
    <!--输入框标题样式-->
    <Style x:Key="TitleBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{Binding Path=(local:ThemeEXT.FontSize).Value, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Padding" Value="2,0,4,0"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>
    <!--ListViewCustom默认项模板-->
    <DataTemplate x:Key="ViewItem">
        <TextBlock Text="{Binding Text}"/>
    </DataTemplate>
    <!--Keyboard默认模板-->
    <DataTemplate x:Key="KeyboardOne">
        <Border x:Name="border" Background="Transparent" CornerRadius="3">
            <Border.Width>
                <MultiBinding Converter="{StaticResource nullSelector}">
                    <Binding Path="ItemWidth" />
                    <Binding Path="ItemWidth" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewCustom}}" />
                </MultiBinding>
            </Border.Width>
            <Border.Height>
                <MultiBinding Converter="{StaticResource nullSelector}">
                    <Binding Path="ItemHeight" />
                    <Binding Path="ItemHeight" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewCustom}}" />
                </MultiBinding>
            </Border.Height>
            <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                <Image Name="image" Source="{Binding Image.Normal}" Stretch="None" Visibility="{Binding Image.Normal, Converter={StaticResource nullToCollapsed}}" />
                <TextBlock Text="{Binding Text}" FontSize="{Binding FontSize}" Visibility="{Binding Text, Converter={StaticResource nullToCollapsed}}"/>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter TargetName="border" Property="Background" Value="#E5E5E5"/>
                <Setter TargetName="image" Property="Source" Value="{Binding Image.Mouse}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsPressed}" Value="True">
                <Setter TargetName="border" Property="Background" Value="{Binding Source={StaticResource ThemeColor}, Converter={StaticResource brushAlphaConverter}, ConverterParameter=240}"/>
                <Setter TargetName="image" Property="Source" Value="{Binding Image.Pressed}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--焦点样式动态边框-->
    <Thickness x:Key="FocusBorderThickness">0</Thickness>
    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="{DynamicResource FocusBorderThickness}" BorderBrush="{StaticResource ThemeColor}" CornerRadius="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ErrorTemplate">
        <DockPanel LastChildFill="true">
            <Border Background="Red" DockPanel.Dock="Right"
                    CornerRadius="10" Margin="3" Width="20" Height="20"
                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <TextBlock Text="!" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White"/>
                <Border.Effect>
                    <DropShadowEffect Color="#FF9300" BlurRadius="6" ShadowDepth="0" Opacity="0.6" />
                </Border.Effect>
            </Border>
            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                <Border BorderBrush="Red" CornerRadius="3" BorderThickness="1"/>
            </AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>
    <Style x:Key="Config" TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="{Binding Path=(local:ThemeEXT.FontSize).Value, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FontFamily" Value="{Binding Path=(local:ThemeEXT.FontFamily).Value, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForeground}" />
        <Setter Property="BorderThickness" Value="1"/>
        <!--解决Chrome窗体下元素边缘模糊的问题，此参数会导致放大缩小动画抖动，但会出现异常-->
        <!--<Setter Property="UseLayoutRounding" Value="True"/>-->
    </Style>
    <Style x:Key="MiniConfig" TargetType="{x:Type Control}" BasedOn="{StaticResource Config}">
        <Setter Property="FontSize" Value="{Binding Path=(local:ThemeEXT.FontSize).Value, RelativeSource={RelativeSource Self}, Converter={StaticResource valueMultiConverter}}"/>
    </Style>
    <Style x:Key="FocusConfig" TargetType="{x:Type Control}" BasedOn="{StaticResource Config}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
    </Style>
    <Style x:Key="ComboConfig" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource FocusConfig}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MaxDropDownHeight" Value="151"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
    </Style>
    <Style x:Key="DataGridText" TargetType="{x:Type TextBlock}" >
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="Padding" Value="3,6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
    </Style>
    <Style x:Key="TextLeft" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridText}"/>
    <Style x:Key="TextCenter" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridText}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TextRight" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridText}">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="TextWrap" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridText}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="None"/>
    </Style>
    <!--马赛克背景-->
    <DrawingBrush x:Key="MosaicBrush" RenderOptions.CachingHint="Cache" Viewport="0,0,16,16" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#A0D3D3D3">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,8,8" />
                            <RectangleGeometry Rect="8,8,8,8" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--虚线边框-->
    <DrawingBrush x:Key="DotLineBrush" RenderOptions.CachingHint="Cache" Viewport="0,0,4,4" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,8,8" />
                            <RectangleGeometry Rect="8,8,8,8" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--#endregion-->

</ResourceDictionary>