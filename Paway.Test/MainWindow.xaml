<WindowEXT x:Class="Paway.Test.MainWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:local="clr-namespace:Paway.Test"
           xmlns:model="clr-namespace:Paway.Model;assembly=Paway.Model"
           xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
           xmlns:ip="http://www.galasoft.ch/mvvmlight"
           xmlns:oxy="http://oxyplot.org/wpf"
           DataContext="{Binding MainWindow, Source={StaticResource Locator}}"
           mc:Ignorable="d"
           HeaderHeight="40" ButtonAlignment="Top"
           Title="{Binding Title}" Height="800" Width="850" WindowStartupLocation="CenterScreen">
    <WindowEXT.Resources>
        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
    </WindowEXT.Resources>
    <DockPanel Name="panel">
        <!--只是将ProxyElement添加到树-->
        <ContentControl Content="{StaticResource ProxyElement}" Visibility="Collapsed"/>
        <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Foreground="White" Height="30" Background="{StaticResource ThemeColorHigh}">
            <TextBlock Text="{Binding Desc}" Padding="10,6" FontSize="14" Margin="-3"></TextBlock>
        </StatusBar>
        <StackPanel DockPanel.Dock="Top">
            <SliderEXT Title="字体" Minimum="0" Maximum="{Binding FontFamilyCount}" Value="{Binding FontFamilyIndex}"> 
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TipValuesChanged">
                        <ip:EventToCommand Command="{Binding FontFamilyChanged}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </SliderEXT>
            <SliderEXT Title="大小" x:Name="sliderSize" Minimum="9" Maximum="36" Value="15" AutoToolTipPrecision="1" TickFrequency="0.1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <i:InvokeCommandAction Command="{Binding SizeChanged}" CommandParameter="{Binding ElementName=sliderSize}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </SliderEXT>
            <Grid>
                <Border Background="{StaticResource ColorSelector}" Height="3" CornerRadius="2" Margin="50,1,2,2"/>
                <SliderEXT Title="主题色" x:Name="sliderTheme" Maximum="7" Value="2.62" AutoToolTipPrecision="2" TickFrequency="0.01"
                                 TrackColorLinear="Transparent;Transparent" TrackBackground="Transparent" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding ColorChanged}" CommandParameter="{Binding ElementName=sliderTheme}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </SliderEXT>
            </Grid>
            <Grid>
                <Border Background="{StaticResource ColorSelector}" Height="3" CornerRadius="2" Margin="50,1,2,2"/>
                <SliderEXT Title="前景色" x:Name="sliderTheme2" Maximum="7" Value="2.62" AutoToolTipPrecision="2" TickFrequency="0.01"
                                 TrackColorLinear="Transparent;Transparent" TrackBackground="Transparent" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding ForegroundChanged}" CommandParameter="{Binding ElementName=sliderTheme2}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </SliderEXT>
            </Grid>
            <Grid>
                <Border Background="{StaticResource ColorSelector}" Height="3" CornerRadius="2" Margin="50,1,2,2"/>
                <SliderEXT Title="背景色" x:Name="sliderTheme3" Maximum="7" Value="2.62" AutoToolTipPrecision="2" TickFrequency="0.01"
                                 TrackColorLinear="Transparent;Transparent" TrackBackground="Transparent" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding BackgroundChanged}" CommandParameter="{Binding ElementName=sliderTheme3}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </SliderEXT>
            </Grid>
            <StackPanel Orientation="Horizontal" Background="White">
                <Button Background="{StaticResource Success}" BorderThickness="0" Content="{Binding ThemeColor}" Height="32" Width="100" Foreground="White"/>
                <Button Background="{StaticResource Warn}" BorderThickness="0" Content="警告" Height="32" Width="100" Foreground="White"/>
                <Button Background="{StaticResource Error}" BorderThickness="0" Content="错误" Height="32" Width="100" Foreground="White"/>

                <Button Background="{StaticResource ThemeColor}" BorderThickness="0" Content="主题颜色" Height="32" Width="100" Foreground="White"/>
                <Button Background="{StaticResource ThemeColorSub}" BorderThickness="0" Content="主题次色" Height="32" Width="100" Foreground="White"/>
                <Button Background="{StaticResource ThemeColorLight}" BorderThickness="0" Content="主题浅色" Height="32" Width="100" Foreground="White"/>
                <Button Background="{StaticResource ThemeColorHigh}" BorderThickness="0" Content="主题深色" Height="32" Width="100" Foreground="White"/>

                <Button Background="{StaticResource ThemeBackground}" Foreground="{StaticResource ThemeForeground}" BorderThickness="0" Content="背景色" Height="32" Width="100" />
                <Button Background="{StaticResource ThemeBackgroundSub}" Foreground="{StaticResource ThemeForeground}" BorderThickness="0" Content="背景次色" Height="32" Width="100" />
                <Button Background="{StaticResource ThemeBackgroundHigh}" Foreground="{StaticResource ThemeForeground}" BorderThickness="0" Content="背景深色" Height="32" Width="100" />
                
                <Button Background="Transparent" Foreground="{StaticResource ThemeForeground}" BorderThickness="0" Content="前景色" Height="32" Width="100" />
                <Button Background="Transparent" Foreground="{StaticResource ThemeForegroundSub}" BorderThickness="0" Content="前景次色" Height="32" Width="100" />
                <Button Background="Transparent" Foreground="{StaticResource ThemeForegroundLight}" BorderThickness="0" Content="前景浅色" Height="32" Width="100" />
            </StackPanel>
        </StackPanel>

        <ExpanderEXT ExpandDirection="Left" Header="输入">
            <StackPanel Width="250">
                <ComboBoxEXT ItemsSource="{IntList Count=20}" SelectedValue="{Binding Value}" HorizontalContentAlignment="Center" />
                <ComboBoxEXT ItemsSource="{EnumList Type=model:MenuAuthType}" SelectedValue="{Binding Path=MenuAuthType, Converter={StaticResource enumConverter}}"/>
                <ComboBoxEXT ItemsSource="{Binding GridList}" SelectedValuePath="Id" DisplayMemberPath="Text" SelectedValue="{Binding Id}"/>
                <ComboBoxEXT ItemsSource="{Binding GridList}" SelectedValuePath="Id" DisplayMemberPath="Text" SelectedValue="{Binding Id}" HorizontalContentAlignment="Center" IsEditable="True"/>
                <ComboMulti ItemsSource="{Binding MultiList}" HorizontalContentAlignment="Center" />
                <ComboDate SelectedValue="{Binding DatePickerTime}" HorizontalContentAlignment="Center"/>
                <ComboView ItemsSource="{Binding GridList}" SelectedValuePath="Id" DisplayMemberPath="Text" SelectedValue="{Binding Id}" HorizontalContentAlignment="Center"/>
                <ComboQuery ItemsSource="{Binding GridList}" SelectedValuePath="Id" DisplayMemberPath="Text" SelectedValue="{Binding Id}" Water="输入搜索..." HorizontalContentAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="FilterEvent">
                            <ip:EventToCommand Command="{Binding CbxFilterCmd}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboQuery>
                <ComboTree ItemsSource="{Binding TreeList}" SelectedValuePath="Id" DisplayMemberPath="Text" SelectedValue="{Binding TreeId}" IQuery="True" HorizontalContentAlignment="Center"/>
                <ComboTime/>
                <TextBoxEXT Name="tb" Icon="Images/close.png" Animation="2" BorderThickness="0,0,0,1" Radius="0" MaxLength="4"
                            HorizontalContentAlignment="Center">
                    <Binding Path="Value">
                        <Binding.ValidationRules>
                            <RegexValidationRule RegexType="Word" MinLength="2" MaxLength="4"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBoxEXT>
                <PasswordBox PasswordBoxEXT.Icon="pack://application:,,,/Paway.Test;component/Images/close.png"
                             HorizontalContentAlignment="Center"
                             PasswordBoxEXT.Password="{Binding Pad}"
                             PasswordBoxEXT.Radius="0"
                             PasswordBoxEXT.Animation="2" BorderThickness="0,0,0,1"/>
                <Grid>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ButtonEXT Name="btnCancel" Content="取消"  AnimationHelper.Value="Bottom"
                               Type="Warn" IsLight="True"
                               ImageStretch="None"
                               Command="{Binding Teach}" CommandParameter="{Binding ElementName=btn}" Click="Cancel_Click" 
                               Image="pack://application:,,,/Paway.Test;component/Images/close.png|pack://application:,,,/Paway.Test;component/Images/close_white.png"/>
                    <ButtonEXT Name="btn" Grid.Column="1"
                             Content="{FontImage Type=Adjust}" Click="Commit_Click" 
                             CommandParameter="{Binding ElementName=btn}"/>
                    <Badge Name="badge" Grid.Column="1" IsWaving="True" HorizontalAlignment="Right" Text="1" Background="{StaticResource Error}" VerticalAlignment="Top" Height="20" Margin="-6"/>
                </Grid>

            </StackPanel>
        </ExpanderEXT>
        <ExpanderEXT ExpandDirection="Right" DockPanel.Dock="Right" Header="显示">
            <StackPanel Width="250" MaxWidth="500">
                <ProgressBarEXT Value="20.4" Minimum="-20" Maximum="50" Name="progress" SmallChange="0.2"/>
                <WrapPanel>
                    <CheckBoxEXT x:Name="cbx" Content="Hello" IsChecked="True"/>
                    <CheckBoxEXT Content="World" IsChecked="{x:Null}"/>
                    <CheckButton Content="Hello" IsChecked="True" Radius="3,0,0,3" />
                    <CheckButton Content="World" Radius="0,3,3,0" Margin="-3,2,2,2"/>
                </WrapPanel>
                <WrapPanel>
                    <RadioBox Name="rb" Content="Hello" IsChecked="True"/>
                    <RadioBox Content="World" IsChecked="True" />
                    <RadioBox Content="Watch" IsChecked="{x:Null}" IsEnabled="False"/>
                    <RadioButtonEXT Content="Hello" IsChecked="True" Radius="3,0,0,3"/>
                    <RadioButtonEXT Content="World" IsChecked="True" Radius="0,3,3,0" Margin="-3,2,2,2"/>
                </WrapPanel>
                <StackPanel Orientation="Horizontal">
                    <Path Style="{StaticResource PathRound}"/>
                    <TransitionControl Name="transition" >
                        <Path Style="{StaticResource PathRound}" Fill="Red"/>
                    </TransitionControl>
                    <Path Style="{StaticResource PathTriangle}"/>
                    <Path Style="{StaticResource PathTriangleDown}"/>
                    <Path Style="{StaticResource PathTriangleRight}"/>
                    <Path Style="{StaticResource PathRect}"/>
                    <Path Style="{StaticResource PathRight}" />
                    <Path Style="{StaticResource PathQuestion}"/>
                    <Path Style="{StaticResource PathClose}"/>
                    <Progress Width="40" Height="40" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <ProgressRound Value="35.2" Width="70" IDrag="True" Angle="280"/>
                    <ProgressBoard Value="35" Width="70" />
                </StackPanel>
                <CalendarEXT/>
                <RichTextBoxEXT x:Name="rt" IsReadOnly="True" Height="50" >
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="追加内容" />
                        </Paragraph>
                        <Paragraph>
                            <Run Text="自动高度" />
                        </Paragraph>
                        <Paragraph>
                            <Run Text="1" />
                        </Paragraph>
                        <Paragraph>
                            <Run Text="2" />
                        </Paragraph>
                        <Paragraph>
                            <Run Text="3" />
                        </Paragraph>
                    </FlowDocument>
                </RichTextBoxEXT>
            </StackPanel>
        </ExpanderEXT>

        <ExpanderEXT ExpandDirection="Down" DockPanel.Dock="Bottom" Header="PlotView">
            <StackPanel>
                <oxy:PlotView Model="{Binding PlotModel}" Height="200">
                    <oxy:PlotView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="重置" Padding="5" FontSize="15" Command="{Binding Reset}"/>
                        </ContextMenu>
                    </oxy:PlotView.ContextMenu>
                </oxy:PlotView>
            </StackPanel>
        </ExpanderEXT>
        <ExpanderEXT ExpandDirection="Down" DockPanel.Dock="Bottom" Header="DataGrid">
            <StackPanel Width="250">
                <DataGridEXT Name="datagrid1" ItemsSource="{Binding PagedList}" SelectedItem="{Binding SelectedItem}"
                             SelectionUnit="CellOrRowHeader" Radius="5,5,0,0" HorizontalContentAlignment="Center"
                             Height="250" VerticalAlignment="Top" ScrollBarColor="Red">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="RowDoubleEvent">
                            <ip:EventToCommand Command="{Binding RowDoubleCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn MinWidth="130" Binding="{Binding Money}" ElementStyle="{StaticResource TextRight}"/>
                        <DataGridTemplateColumn Header="Desc">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Desc}" Foreground="Red" Style="{StaticResource TextLeft}"/>
                                        <ButtonEXT Content="{Binding Desc}" IsLight="True" 
                                                   Command="{Binding ElementName=datagrid1, Path=DataContext.ItemClickCommand}" CommandParameter="{Binding Desc}" />
                                    </WrapPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="IsSelected" Visibility="{Binding DataContext.IsSelected, Source={StaticResource ProxyElement}, Converter={StaticResource boolToVisible}}">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <CheckBoxEXT IsChecked="{Binding DataContext.IsSelected, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" Padding="10,6,4,6" Margin="-8,-10,-2,-10"/>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <CheckBoxEXT IsChecked="{Binding IsPressed, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGridEXT>
                <DataPager Name="dataPager" Margin="0,0,0,3" Source="{Binding PagedList}"/>
            </StackPanel>
        </ExpanderEXT>
        <ExpanderEXT ExpandDirection="Down" DockPanel.Dock="Bottom" Header="TreeView">
            <StackPanel Width="250">
                <TreeViewEXT x:Name="TreeViewOrg" Height="180" ICheckBox="Visible" ItemsSource="{Binding TreeList}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedItemChanged}" CommandParameter="{Binding ElementName=TreeViewOrg}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeViewEXT>
            </StackPanel>
        </ExpanderEXT>
        <ExpanderEXT ExpandDirection="Down" DockPanel.Dock="Bottom" Header="TabControl">
            <TabControlEXT MaxHeight="300" MenuMode="False">
                <TabItem Cursor="Hand" Header="音乐电台">
                    <TextBlock Text="Hello"/>
                </TabItem>
                <TabItem Cursor="Hand" Header="Mv电台"/>
            </TabControlEXT>
        </ExpanderEXT>

        <StackPanel>
            <ListViewEXT x:Name="listView3" Margin="5,5,0,0" IsLight="True" ItemWidthType="CustomRow" Row="3"
                         ItemHeight="60" ItemWidth="100" ItemsSource="{Binding GridList}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionCommand}" CommandParameter="{Binding ElementName=listView3}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <ip:EventToCommand Command="{Binding RectDoubleCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!--<ListBoxItemEXT Text="World"/>
                <ListBoxItemEXT Text="A"/>
                <ListBoxItemEXT Text="B"/>
                <ListBoxItemEXT Text="C"/>
                <ListBoxItemEXT Text="D"/>
                <ListBoxItemEXT Text="E"/>
                <ListBoxItemEXT Text="F"/>
                <ListBoxItemEXT Text="G"/>-->
            </ListViewEXT>
        </StackPanel>

    </DockPanel>
    <WindowEXT.FunctionBar>
        <WindowFunctionBar>
            <Separator />
            <ListViewEXT Name="listView1" IAnimation="True" ItemHeight="67" ItemWidth="101"
                         IsLight="True" ItemBorder="1;1,1,1,4">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionCommand}" CommandParameter="{Binding ElementName=listView1}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBoxItemEXT Text="Hello" IsSelected="True"
                                  Image="pack://application:,,,/Paway.Test;component/Images/close.png"/>
                <ListBoxItemEXT Text="World" Desc="1" ItemBackground=";#78FF4633" ItemTextForeground="#FF4633;;"/>
                <ListBoxItemEXT Text="A" Desc="{FontImage Type=CaretDown}" ItemBackground=";#7802E8FA" ItemTextForeground="#02E8FA;;"/>
                <ListBoxItemEXT Text="C" ItemBackground=";#78024AFA" ItemTextForeground="#024AFA;;"/>
                <ListBoxItemEXT Text="D" ItemBackground=";#78024AFA" ItemTextForeground="#024AFA;;"/>
            </ListViewEXT>
        </WindowFunctionBar>
    </WindowEXT.FunctionBar>
</WindowEXT>
